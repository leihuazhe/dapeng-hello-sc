<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dapeng-hello</artifactId>
        <groupId>com.dapeng.example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>hello-service</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <dapeng.version>2.1.1</dapeng.version>
    </properties>

    <dependencies>


        <dependency>
            <groupId>com.github.dapeng-soa</groupId>
            <artifactId>dapeng-spring</artifactId>
            <version>${dapeng.version}</version>
        </dependency>

        <dependency>
            <groupId>com.dapeng.example</groupId>
            <artifactId>hello-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>4.3.5.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>4.3.5.RELEASE</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.dapeng-soa</groupId>
                <artifactId>dapeng-maven-plugin</artifactId>
                <version>${dapeng.version}</version>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.artifactId}/
                            </outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeArtifactIds>dapeng-core</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/${project.artifactId}/</outputDirectory>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <artifactId>maven-antrun-plugin</artifactId>-->
<!--                <version>1.8</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy files</id>-->
<!--                        <phase>package</phase>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash; copy child's output files into target/docker &ndash;&gt;-->
<!--                            <tasks>-->
<!--                                <copy todir="${basedir}/docker/${project.artifactId}/">-->
<!--                                    <fileset dir="${project.build.directory}/${project.artifactId}"/>-->
<!--                                </copy>-->
<!--                            </tasks>-->
<!--                        </configuration>-->
<!--                        <goals>-->
<!--                            <goal>run</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>clean up the docker folder</id>-->
<!--                        <phase>clean</phase>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash; delete folder under docker &ndash;&gt;-->
<!--                            <tasks>-->
<!--                                <delete dir="${basedir}/docker/${project.artifactId}"/>-->
<!--                            </tasks>-->
<!--                        </configuration>-->
<!--                        <goals>-->
<!--                            <goal>run</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>0.4.10</version>-->
<!--                <configuration>-->
<!--                    <imageName>docker.dapeng.example/hello-service:1.0-SNAPSHOT</imageName>-->
<!--                    <dockerDirectory>${basedir}/docker</dockerDirectory>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>